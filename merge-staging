#!/bin/sh
#================================================================
# HEADER
#================================================================
#% SYNOPSIS
#+    ${SCRIPT_NAME} [-h] [-u]...
#%
#% DESCRIPTION
#%    Doing those boring every day things. Running without flags will default to --everything
#%
#% OPTIONS
#%    -h, --help                                Print this help
#================================================================
# END_OF_HEADER
#================================================================

SCRIPT_HEADSIZE=$(head -200 ${0} |grep -n "^# END_OF_HEADER" | cut -f1 -d:)
SCRIPT_NAME="$(basename ${0})"
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color
PATH_TO_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
TERMINAL_APP="Terminal"
VERSION="0.2.0"
NPM_PREFIX=$(npm config get prefix)
REPOS=("api-gateway" "content-api" "user-api" "push-api" "babel-app" "arch-cms")
TAG_REPOS=("api-gateway" "content-api" "user-api" "push-api" "babel-app" "arch-cms" "api-common" "ember-cli-arch-editor" "ember-cli-compton")

function help_menu {
    head -${SCRIPT_HEADSIZE:-99} ${0} | grep -e "^#[%+-]" | sed -e "s/^#[%+-]//g" -e "s/\${SCRIPT_NAME}/${SCRIPT_NAME}/g" ;
}

function tag {
    #for i in "${TAG_REPOS[@]}"
    #do : 
    # do whatever on $i
        #cd "${PATH_TO_ROOT}/${i}/"
        echo " Tagging ${i} to version ${VERSION}"
        git checkout master
        #git checkout HEAD -- package-lock.json
        git pull
        npm version ${VERSION} -m "Sprint release ${VERSION}" 
        #git tag -a  ${VERSION}
        git push origin ${VERSION} 
    #done
}

function send_to_staging {
    cd "${PATH_TO_ROOT}/${1}/"
    echo "    Update ${1}"
    if [ -d ".git" ]
    then
        git status
        #git checkout beta
        #git pull
    else
        echo "${RED}Skipping because it doesn't look like it has a .git folder. ${NC}"
    fi
}
function do_update {
    cd "${PATH_TO_ROOT}"
    echo "  ${GREEN}âœ“${NC} Get everything from api"
    # Add new stuff
    for i in "${REPOS[@]}"
    do
    : 
    # do whatever on $i
        send_to_staging $i
    done

    #reset
    cd "${PATH_TO_ROOT}"
}

echo "Starting update at: $(date +"%T")"

if [ $# -eq 0 ]
then
    tag
    #do_update
fi

while [ ! $# -eq 0 ]
do
    case "$1" in
        --help | -h)
            help_menu
            ;;
    esac
    shift
done

echo "Done updating at: $(date +"%T")"
